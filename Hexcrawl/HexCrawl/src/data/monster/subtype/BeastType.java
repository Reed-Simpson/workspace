package data.monster.subtype;

import java.util.HashMap;

import data.WeightedTable;
import data.biome.BiomeType;
import data.population.Species;
import data.threat.CreatureType;
import names.IndexibleNameGenerator;

public enum BeastType implements Species {
	ALLOSAURUS,AMOEBA,ANGLERFISH,ANKYLOSAURUS,ANT,APE,ARMADILLO,AUROCHS,AXE_BEAK,
	BABOON,BADGER,BAT,BEAVER,BEETLE,BIRD_OF_PARADISE,BLACK_BEAR,HAWK,BOAR,BRONTOSAURUS,BROWN_BEAR,BUTTERFLY,
	CAMEL,CAT,CENTIPEDE,CHAMELEON,CHICKEN,CLAM,COCKROACH,CONDOR,CONSTRICTOR_SNAKE,CRAB,CRANE,CRANIUM_RAT,CROCODILE,CROW,
	DEEP_ROTHE,DEER,DEINONYCHUS,DIMETRODON,DIRE_WOLF,DRAGONFLY,DOLPHIN,DRAFT_HORSE,
	EAGLE,EEL,ELEPHANT,ELK,FERRET,FIREFLY,FLAMINGO,FLY,FLYING_SNAKE,FOX,FROG,GIANT_FIRE_BEETLE,GIRAFFE,GOAT,GOOSE,GULL,
	HADROSAURUS,HIPPOPOTAMUS,HUMMINGBIRD,HYENA,JACKAL,JELLYFISH,KILLER_WHALE,KINGFISHER,LEECH,LION,LIZARD,LOBSTER,LOCUST,
	MAGPIE,MAMMOTH,MANATEE,MANTIS,MASTIFF,MOCKINGBIRD,MOLE,MOSQUITO,MOTH,MULE,MUSKRAT,NARWHAL,NEWT,
	OCTOPUS,OSTRICH,OTTER,OWL,OX,PANTHER,PARROT,PEACOCK,PENGUIN,PLATYPUS,PLESIOSAURUS,POISONOUS_SNAKE,POLAR_BEAR,PONY,PORCUPINE,PTERANODON,PUFFERFISH,
	QUETZALCOATLUS,QUIPPER,RABBIT,RACCOON,RAT,RAVEN,RAY,RHINOCEROS,RIDING_HORSE,ROTHE,
	SABERTOOTHED_TIGER,SALAMANDER,SCORPION,SEA_ANEMONE,SEA_HORSE,SEA_URCHIN,SEAL,SHARK,SHEEP,SHRIMP,SLUG,SNAIL,SPARROW,SPIDER,SQUID,SQUIRREL,STEGOSAURUS,STIRGE,SWAN,SWARM_OF_ROT_GRUBS,SWORDFISH,
	TIGER,TOAD,TRICERATOPS,TURTLE,TYRANNOSAURUS_REX,VELOCIRAPTOR,VULTURE,WALRUS,WARHORSE,WASP,WEASEL,WHALE,WOODPECKER,WOLF,WOLVERINE;


	private static HashMap<BiomeType,WeightedTable<Species>> habitats;

	public static WeightedTable<Species> getSpecies(BiomeType type){
		if(habitats==null) populateHabitats();
		WeightedTable<Species> result = habitats.get(type);
		if(result==null) result = new WeightedTable<Species>();
		return result;
	}

	private static void populateHabitats() {
		habitats = new HashMap<BiomeType,WeightedTable<Species>>();
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {BROWN_BEAR,FOX,HAWK,MAMMOTH,OWL,PENGUIN,POLAR_BEAR,RABBIT,RAVEN,SABERTOOTHED_TIGER,WOLVERINE};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.SNOW, list);
		}
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {CRAB,DIMETRODON,DOLPHIN,EAGLE,GULL,HAWK,KINGFISHER,LIZARD,MANATEE,OTTER,PLESIOSAURUS,POISONOUS_SNAKE,PTERANODON,
					QUETZALCOATLUS,SEAL,STIRGE,TOAD,TURTLE,WALRUS};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.BEACH, list);
		}
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {ANT,ARMADILLO,BEETLE,CAMEL,CAT,CHAMELEON,CONDOR,CONSTRICTOR_SNAKE,FERRET,FLYING_SNAKE,FOX,GIRAFFE,
					HIPPOPOTAMUS,HUMMINGBIRD,HYENA,JACKAL,LION,LIZARD,LOCUST,MULE,OSTRICH,POISONOUS_SNAKE,RABBIT,RAVEN,SCORPION,SPIDER,STIRGE,TOAD,TURTLE,VULTURE};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.DESERT, list);
		}
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {ANT,BABOON,BADGER,BEAVER,BEETLE,BUTTERFLY,CAT,COCKROACH,CROW,DEER,OWL,PORCUPINE,HAWK,FLYING_SNAKE,FOX,RABBIT,RAT,WEASEL,MASTIFF,POISONOUS_SNAKE,
					STIRGE,BOAR,CONSTRICTOR_SNAKE,ELK,SLUG,SNAIL,SQUIRREL,MOTH,NEWT,OTTER,SALAMANDER,MOSQUITO,LOCUST,MAGPIE,MOCKINGBIRD,PEACOCK,
					BAT,FROG,LIZARD,MOLE,PANTHER,RACCOON,RAVEN,VELOCIRAPTOR,WOLF,APE,BLACK_BEAR,WASP,BROWN_BEAR,DEINONYCHUS,DIRE_WOLF,SPIDER,TOAD,
					STEGOSAURUS,BRONTOSAURUS,WOLVERINE,TURTLE,WOODPECKER};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.FOREST, list);
		}
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {ANT,ARMADILLO,BUTTERFLY,CAT,COCKROACH,CONDOR,CRANE,CROW,DEER,EAGLE,FERRET,FOX,GIRAFFE,GOAT,HIPPOPOTAMUS,HYENA,JACKAL,OSTRICH,RABBIT,VULTURE,
					HAWK,FLYING_SNAKE,WEASEL,MAGPIE,MANTIS,MOCKINGBIRD,PEACOCK,
					POISONOUS_SNAKE,STIRGE,AXE_BEAK,BOAR,ELK,SQUIRREL,MOTH,HUMMINGBIRD,LOCUST,SPIDER,
					MOLE,HADROSAURUS,PANTHER,PTERANODON,RIDING_HORSE,ROTHE,VELOCIRAPTOR,WOLF,WASP,DEINONYCHUS,
					LION,TIGER,ALLOSAURUS,AUROCHS,RHINOCEROS,ANKYLOSAURUS,ELEPHANT,STEGOSAURUS,BRONTOSAURUS,TRICERATOPS,TYRANNOSAURUS_REX,TURTLE};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.GRASSLAND, list);
		}
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {ANT,BABOON,CONDOR,EAGLE,FOX,GOAT,HYENA,RAVEN,VULTURE,HAWK,WEASEL,MASTIFF,MULE,POISONOUS_SNAKE,RABBIT,SPIDER,STIRGE,AXE_BEAK,BOAR,ELK,OWL,
					PANTHER,BAT,WOLF,SHEEP,BROWN_BEAR,DEINONYCHUS,DIRE_WOLF,LION,AUROCHS,QUETZALCOATLUS,SQUIRREL,WOLVERINE,LOCUST};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.ROCKYHILLS, list);
		}
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {ANT,ARMADILLO,BABOON,BEETLE,BIRD_OF_PARADISE,BUTTERFLY,CHAMELEON,CHICKEN,COCKROACH,LIZARD,SPIDER,FLYING_SNAKE,FLY,POISONOUS_SNAKE,STIRGE,AXE_BEAK,CONSTRICTOR_SNAKE,FROG,
					HADROSAURUS,PTERANODON,BAT,VELOCIRAPTOR,APE,WASP,DEINONYCHUS,ALLOSAURUS,BOAR,SQUIRREL,PLATYPUS,MOTH,MOSQUITO,HUMMINGBIRD,LOCUST,MANTIS,PARROT,
					ANKYLOSAURUS,SCORPION,STEGOSAURUS,BRONTOSAURUS,TRICERATOPS,TYRANNOSAURUS_REX,TURTLE,TIGER,WOODPECKER};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.JUNGLE, list);
		}
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {ANT,EAGLE,FOX,GOAT,HAWK,STIRGE,PTERANODON,BAT,LION,AUROCHS,ELK,QUETZALCOATLUS,RABBIT,SABERTOOTHED_TIGER,SPIDER,SHEEP,SQUIRREL,WOLVERINE,RAVEN};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.MOUNTAINS, list);
		}
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {ANT,BEAVER,BEETLE,BUTTERFLY,COCKROACH,CRANE,DRAGONFLY,FIREFLY,FLY,RACCOON,RAT,POISONOUS_SNAKE,STIRGE,CONSTRICTOR_SNAKE,DIMETRODON,FROG,LIZARD,HADROSAURUS,
					CROCODILE,SWARM_OF_ROT_GRUBS,SPIDER,SQUIRREL,TOAD,SLUG,SNAIL,MUSKRAT,NEWT,OTTER,PLATYPUS,SALAMANDER,TURTLE,MOTH,MOSQUITO,GOOSE,KINGFISHER,LOCUST,SWAN,WOODPECKER};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.WETLAND, list);
		}
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {ANT,BEETLE,COCKROACH,CRANIUM_RAT,GIANT_FIRE_BEETLE,MOLE,RAT,STIRGE,DEEP_ROTHE,BAT,CENTIPEDE,LIZARD,POISONOUS_SNAKE,RABBIT,
					SWARM_OF_ROT_GRUBS,SPIDER,TOAD,CONSTRICTOR_SNAKE,SLUG,SQUIRREL};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.VOID, list);
		}
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {BEAVER,QUIPPER,CLAM,CONSTRICTOR_SNAKE,CRANE,CROCODILE,DRAGONFLY,FROG,GULL,HIPPOPOTAMUS,LEECH,PLESIOSAURUS,SNAIL,
					MUSKRAT,NEWT,OTTER,PLATYPUS,SALAMANDER,TURTLE,GOOSE,KINGFISHER,SWAN};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.LAKE, list);
		}
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {GULL,ANGLERFISH,CLAM,QUIPPER,DOLPHIN,CONSTRICTOR_SNAKE,EEL,SEA_HORSE,OCTOPUS,KILLER_WHALE,JELLYFISH,LOBSTER,CRAB,MANATEE,RAY,
					SHARK,NARWHAL,OTTER,PENGUIN,PUFFERFISH,SEA_ANEMONE,SEA_URCHIN,SEAL,SHRIMP,SQUID,SWORDFISH,WALRUS,TURTLE,WHALE};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.WATER, list);
		}
		{
			WeightedTable<Species> list = new WeightedTable<Species>();
			Species[] array = new Species[] {BEETLE,CAT,CHICKEN,COCKROACH,CRANIUM_RAT,CROW,FOX,GOAT,RAT,RAVEN,FLYING_SNAKE,MASTIFF,MOLE,MULE,PONY,RABBIT,STIRGE,SLUG,SNAIL,DRAFT_HORSE,CENTIPEDE,
					POISONOUS_SNAKE,OX,RACCOON,RIDING_HORSE,SQUIRREL,FLY,MOTH,GOOSE,BAT,CROCODILE,WASP,WARHORSE,SPIDER,TURTLE,HUMMINGBIRD,LOCUST,MAGPIE,MOCKINGBIRD,SPARROW};
			for(Species s:array) list.put(s);
			habitats.put(BiomeType.CITY, list);
			}
		}

		@Override
		public IndexibleNameGenerator getNameGen() {
			return CreatureType.BEAST.getNameGen();
		}






	}
